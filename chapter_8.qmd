# Time Series Regression and Forecasting

Any metric that is measured over regular time intervals forms a time series. Analysis of time series is commercially importance because of industrial need and relevance especially w.r.t forecasting (demand, sales, supply etc).

Time series data is collected for a single entity over time. Time series data allows estimation of the effect on $Y$ of a change in $X$ over time. This is what econometricians call a dynamic causal effect. Another application of time series data is forecasting. The following packages and their dependencies are needed for reproduction of the code chunks presented throughout this chapter:

```{r}
#| warning: false
pacman::p_load(AER,
               dynly,
               forecast,
               readxl,
               stargazer,
               scales,
               quantmod,
               urca)
```

A time series can be broken down to its components so as to systematically understand, analyze, model and forecast it.

## How to create a Time Series in R ?

Upon importing your data into R, use ts() function as follows. The input Data used here is ideally a numeric vector of the class 'numeric' or 'integer'.

### `ts` objects

A time series can be thought of as a list of numbers, along with some information about what times those numbers were recorded. This information can be stored as a `ts` object in R.

Suppose you have annual observations for the last few years:

```{r}
data_year <- read.csv("data/timeseries.csv")
head(data_year)
```

We turn this into a ts object using the ts() function:

```{r}
y <- ts(c(123,39,78,52,110), start=2012)
```

-   If you have annual data, with one observation per year, you only need to provide the starting year (or the ending year).

-   For observations that are more frequent than once per year, you simply add a frequency argument. For example, if your monthly data is already stored as a numerical vector z, then it can be converted to a ts object like this:

```{txt}
y <- ts(z, start=2003, frequency=12)
```

### Time plots

For time series data, the obvious graph to start with is a time plot. That is, the observations are plotted against the time of observation, with consecutive observations joined by straight lines.

## Linear and Nonlinear Autoregressive Distributed Lag Models

### Autoregressive Distributed Lag (ARDL) Models

### Panel Autoregressive Distributed Lag (ARDL) Models

### Nonlinear Autoregressive Distributed Lag (NARDL) Models

### Panel Nonlinear Autoregressive Distributed Lag (NARDL) Models
